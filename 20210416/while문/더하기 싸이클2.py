# 문제
# 0보다 크거나 같고, 99보다 작거나 같은 정수가 주어질 때 다음과 같은 연산을 할 수 있다.
#
# 먼저 주어진 수가 10보다 작다면 앞에 0을 붙여 두 자리 수로 만들고, 각 자리의 숫자를 더한다. 그 다음, 주어진 수의 가장 오른쪽 자리 수와 앞에서 구한 합의 가장 오른쪽 자리 수를 이어 붙이면 새로운 수를 만들 수 있다. 다음 예를 보자.
#
# 26부터 시작한다. 2+6 = 8이다. 새로운 수는 68이다. 6+8 = 14이다. 새로운 수는 84이다. 8+4 = 12이다. 새로운 수는 42이다. 4+2 = 6이다. 새로운 수는 26이다.
#
# 위의 예는 4번만에 원래 수로 돌아올 수 있다. 따라서 26의 사이클의 길이는 4이다.
#
# N이 주어졌을 때, N의 사이클의 길이를 구하는 프로그램을 작성하시오.
#
# 입력
# 첫째 줄에 N이 주어진다. N은 0보다 크거나 같고, 99보다 작거나 같은 정수이다.
#
# 출력
# 첫째 줄에 N의 사이클 길이를 출력한다.

# 26일때 --> 8 --> 68
# --> (1의자리 * 10) + ((1의자리 + 10의자리)%10)

# 68일때 --> 14 --> 84
# --> (1의자리 * 10) + ((1의자리 + 10의자리)%10)

# 84일때 --> 12 --> 42
# --> (1의자리 * 10) + ((1의자리 + 10의자리)%10)

# 42일때 --> 6 --> 26
# --> (1의자리 * 10) + ((1의자리 + 10의자리)%10)

# 26일때 --> 8
# --> (1의자리 * 10) + ((1의자리 + 10의자리)%10)

# a=t=int(input())
# c=0
# while(c<1)+a-t):
#     t=t%10*10+t*11//10%10;
#     c+=1
# print(c)

# 26
t = a = int(input())
c = 0
# 0일때 true or true
# 1일때 false or flase
# 2일때 false or false

# or 조건은 둘 중 하나만 True여도 True임
# while 반복으로 쭉쭉 이어지므로 0 이후 앞은 무조건 false
# 뒤의 조건이 false가 되어야 조건문이 멈춤
# 뒤의 조건이 false가 되려면 처음의 a-t가 0이 되어야 함(0은 false, 1은 Ture)
# 처음 이후 a-t가 0이 되려면 두 값이 같아져야 함.

while ( (c<1) or (a-t) ): #두 값 모두 false가 되어야 멈춤
    # 1자리일때
    if (len(str(t)) == 1):
        t = (t * 10) + t
        c+=1
        print(t,c)

    # 2자리일때
    t = (int(str(t)[1]) * 10) + ((int(str(t)[1]) + int(str(t)[0]))%10)
    c+=1
    print(t,c)
