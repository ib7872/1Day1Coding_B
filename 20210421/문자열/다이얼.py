# 상근이의 할머니는 아래 그림과 같이 오래된 다이얼 전화기를 사용한다.

# 전화를 걸고 싶은 번호가 있다면, 숫자를 하나를 누른 다음에 금속 핀이 있는 곳 까지 시계방향으로 돌려야 한다.
# 숫자를 하나 누르면 다이얼이 처음 위치로 돌아가고, 다음 숫자를 누르려면 다이얼을 처음 위치에서 다시 돌려야 한다.
#
# 숫자 1을 걸려면 총 2초가 필요하다. 1보다 큰 수를 거는데 걸리는 시간은 이보다 더 걸리며,
# 한 칸 옆에 있는 숫자를 걸기 위해선 1초씩 더 걸린다.
# -> 1:2, 2:3, 3:4, 4:5 ...

#
# 상근이의 할머니는 전화 번호를 각 숫자에 해당하는 문자로 외운다.
# 즉, 어떤 단어를 걸 때, 각 알파벳에 해당하는 숫자를 걸면 된다.
# 예를 들어, UNUCIC는 868242와 같다.
# abc:2, def:3, ghi:4, jkl:5, mno:6, pqrs:7, tuv:8, wxyz:9

#
# 할머니가 외운 단어가 주어졌을 때, 이 전화를 걸기 위해서 필요한 최소 시간을 구하는 프로그램을 작성하시오.

# 입력
# 첫째 줄에 알파벳 대문자로 이루어진 단어가 주어진다. 단어의 길이는 2보다 크거나 같고, 15보다 작거나 같다.

# 출력
# 첫째 줄에 다이얼을 걸기 위해서 필요한 최소 시간을 출력한다.
#
# 예제 입력 1
# UNUCIC

# 예제 출력 1
# 36

# 1를 입력하는데는 2초가 걸림 --> 시간 = 숫자 + 1
# 숫자를 입력하면 0으로 초기화가 되고 다시 입력해야 함
# # abc:2, def:3, ghi:4, jkl:5, mno:6, pqrs:7, tuv:8, wxyz:9 라고 매핑되어 있음
# 8, 6, 8, 2, 4, 2 에 + 6을 해주면 됨
# --> 영어에 해당하는 숫자 + 단어의 길이를 해주면 됨(len())


# 점화식을 잘 이용해야함 숫자에는 분명 규칙이 있음

# 97 98 99 --> 2
# 100 101 102 --> 3
# 103 104 105 --> 4
# 106 107 108 --> 5
# 109 110 111 --> 6

# 112 113 114 115 --> 7
# 116 117 118 --> 8
# 119 120 121 122 --> 9

#
# 97 100 103 106 109 112 116 119
# 98 101 104 107 110 113 117 120
# 99 102 105 108 111 114 118 121


sentence = input().lower()
sentence_length = 0
for i in sentence:

    # sentence_length += (((ord(i) - 97) // 3) + 2)
    if (ord(i)<112):
        sentence_length += (((ord(i) - 97) // 3) + 2)
    elif(ord(i)<116):
        sentence_length += 7
    elif(ord(i)<119):
        sentence_length += 8
    else:
        sentence_length += 9

    # 112 113 114 115 --> 7
    # 116 117 118 --> 8
    # 119 120 121 122 --> 9

print(sentence_length + len(sentence))


# a = {c: i for i, cs in enumerate(("ABC", "DEF", "GHI", "JKL", "MNO", "PQRS", "TUV", "WXYZ"), 3) for c in cs}
# print(sum(a[c] for c in input()))